<button
  command="show-modal"
  commandfor="dialog"
  class="bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-3 px-8 rounded-lg transition-all duration-300 shadow-lg hover:shadow-indigo-600/30"
>
  Create Confession
</button>

<el-dialog>
  <dialog
    id="dialog"
    aria-labelledby="dialog-title"
    class="fixed inset-0 size-auto max-h-none max-w-none overflow-y-auto bg-transparent backdrop:bg-transparent"
  >
    <el-dialog-backdrop
      class="fixed inset-0 bg-black/70 transition-opacity data-closed:opacity-0 data-enter:duration-300 data-enter:ease-out data-leave:duration-200 data-leave:ease-in"
    ></el-dialog-backdrop>

    <div
      tabindex="0"
      class="flex min-h-full items-end justify-center p-4 text-center focus:outline-none sm:items-center sm:p-0"
    >
      <el-dialog-panel
        class="relative transform overflow-hidden rounded-xl bg-gradient-to-b from-gray-900 to-indigo-950 border border-indigo-500/20 text-left shadow-2xl transition-all data-closed:translate-y-4 data-closed:opacity-0 data-enter:duration-300 data-enter:ease-out data-leave:duration-200 data-leave:ease-in sm:my-8 sm:w-full sm:max-w-lg data-closed:sm:translate-y-0 data-closed:sm:scale-95"
      >
        <form method="POST" id="confessionForm" action="/">
          <input type="hidden" name="form_id" value="confession_form" />
          <div class="px-6 pt-6 pb-5">
            <div class="sm:flex sm:items-start">
              <h2 id="dialog-title" class="text-xl font-semibold text-white">Create a Confession</h2>
            </div>

            <div class="mt-6 space-y-4">
              <div>
                <label for="modal-name" class="block text-indigo-200 font-medium mb-2 text-sm">Your name</label>
                <input
                  type="text"
                  id="modal-name"
                  name="name"
                  class="w-full bg-white/5 border border-indigo-300/20 rounded-lg px-4 py-3 text-white placeholder-indigo-300/50 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  placeholder="Anonymous"
                />
              </div>
              
              <div>
                <label for="modal-to" class="block text-indigo-200 font-medium mb-2 text-sm">To</label>
                <input
                  type="text"
                  id="modal-to"
                  name="to"
                  class="w-full bg-white/5 border border-indigo-300/20 rounded-lg px-4 py-3 text-white placeholder-indigo-300/50 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  placeholder="Who is this message for?"
                />
              </div>
              
              <div>
                <label for="modal-message" class="block text-indigo-200 font-medium mb-2 text-sm">Message</label>
                <textarea
                  id="modal-message"
                  name="message"
                  rows="4"
                  class="w-full bg-white/5 border border-indigo-300/20 rounded-lg px-4 py-3 text-white placeholder-indigo-300/50 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  placeholder="Share your thoughts..."
                ></textarea>
              </div>
              
              <div>
                <label
                  for="modal-song"
                  class="block text-indigo-200 font-medium mb-2 text-sm"
                  >Add a song</label
                >
                <input 
                  type="text" 
                  id="modal-song" 
                  name="songName"
                  class="w-full bg-white/5 border border-indigo-300/20 rounded-lg px-4 py-3 text-white placeholder-indigo-300/50 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  placeholder="Enter song name (e.g. 'All of Me by John Legend')"
                />
                <input type="hidden" id="modal-song-id" name="songID" />
                <div id="song-results" class="mt-2 rounded-lg bg-white/5 max-h-40 overflow-y-auto hidden"></div>
              </div>
            </div>
          </div>

          <div
            class="border-t border-indigo-500/10 px-6 py-4 flex flex-col-reverse sm:flex-row-reverse gap-3 sm:gap-2"
          >
            <button
              type="submit"
              class="w-full sm:w-auto flex-1 bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2.5 px-5 rounded-lg transition-colors duration-200"
            >
              Submit Confession
            </button>
            <button
              command="close-modal"
              commandfor="dialog"
              type="button"
              class="w-full sm:w-auto flex-1 border border-indigo-200/20 hover:bg-white/5 text-indigo-200 font-medium py-2.5 px-5 rounded-lg transition-colors duration-200"
            >
              Cancel
            </button>
          </div>
        </form>
      </el-dialog-panel>
    </div>
  </dialog>
</el-dialog>

<script is:inline>
  // Only run this code in the browser
  if (typeof window !== 'undefined') {
    document.addEventListener("DOMContentLoaded", () => {
      const dialog = document.getElementById("dialog");
      const form = document.getElementById("confessionForm");
      const songInput = document.getElementById("modal-song");
      const songIdInput = document.getElementById("modal-song-id");
      const songResults = document.getElementById("song-results");
      
      let searchTimeout;
      
      // Song search functionality
      if (songInput && songResults && songIdInput) {
        songInput.addEventListener("input", (e) => {
          clearTimeout(searchTimeout);
          const query = e.target.value.trim();
          
          if (query.length < 3) {
            songResults.classList.add("hidden");
            return;
          }
          
          searchTimeout = setTimeout(async () => {
            try {
              const response = await fetch(`/api/spotify-search?q=${encodeURIComponent(query)}`);
              const data = await response.json();
              
              if (data.songs && data.songs.length > 0) {
                songResults.innerHTML = '';
                data.songs.forEach(song => {
                  const div = document.createElement('div');
                  div.className = 'p-2 hover:bg-white/10 cursor-pointer flex items-center';
                  div.innerHTML = `
                    ${song.albumImg ? `<img src="${song.albumImg}" alt="${song.name}" class="w-10 h-10 mr-2">` : ''}
                    <div>
                      <div class="text-white font-medium">${song.name}</div>
                      <div class="text-indigo-300 text-sm">${song.artist}</div>
                    </div>
                  `;
                  
                  div.addEventListener('click', () => {
                    songInput.value = `${song.name} - ${song.artist}`;
                    songIdInput.value = song.id;
                    songResults.classList.add("hidden");
                  });
                  
                  songResults.appendChild(div);
                });
                songResults.classList.remove("hidden");
              } else {
                songResults.innerHTML = '<div class="p-2 text-indigo-300">No songs found</div>';
                songResults.classList.remove("hidden");
              }
            } catch (error) {
              console.error('Error searching for songs:', error);
            }
          }, 500);
        });
        
        // Hide results when clicking outside
        document.addEventListener('click', (e) => {
          if (!songInput.contains(e.target) && !songResults.contains(e.target)) {
            songResults.classList.add("hidden");
          }
        });
      }

      if (form && dialog) {
        form.addEventListener("submit", (e) => {
          e.preventDefault();
          
          const formData = new FormData(form);
          
          fetch('/', {
            method: 'POST',
            body: formData
          })
          .then(response => {
            dialog.close();
            window.location.href = '/?t=' + new Date().getTime();
          })
          .catch(error => {
            console.error('Error submitting form:', error);
          });
        });
      }
    });
  }
</script>